# Raspberry Pi profile specific configuration
# This file is used when SPRING_PROFILES_ACTIVE=raspberry-pi

# Import environment variables from the file specified in the docker-compose.yaml file with raspberry-pi profile
spring.config.import=optional:file:.env.raspberry-pi[.properties]

# Spring Boot application properties
spring.application.name=${APP_NAME}
server.port=${PORT}



# Database configuration
spring.datasource.url=jdbc:mariadb://${MARIADB_HOST}:${MARIADB_PORT}/${MARIADB_DB}
spring.datasource.username=${MARIADB_USER}
spring.datasource.password=${MARIADB_PASSWORD}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.open-in-view=false


backend-domain=${BACKEND_URL}
frontend-domain=${FRONTEND_URL}

file.upload-dir=${UPLOAD_DIR}


security.jwt.secret-key=${JWT_SECRET_KEY}
# Access-Token: 1 Stunde
security.jwt.expiration-time=${JWT_TOKEN_EXPIRATION_TIME}
# Refresh-Token: 7 Tage
security.jwt.refresh-token.expiration-time=${REFRESH_TOKEN_EXPIRATION_TIME}
# TokenType: Bearer
security.jwt.token-type=${TOKEN_TYPE}

# WebSocket
websocket.security.same-origin-disabled=${WEBSOCKET_SAME_ORIGIN}
# Debug-Logging aktivieren
logging.level.org.springframework.web.socket=DEBUG
logging.level.org.springframework.messaging=DEBUG
